import itertools


# 소수일때 True  소수가 아닐때 False 를 출력
# True 일때만 prime list 에 추가
def is_prime(n):
    # n 이 1 이나 0 이면 소수가 아님
    if n < 2:
        return False
    # n 이 자기 자신을 제외한 자연수로 나누어 떨어지면 소수가 아님
    for i in range(2, n):
        if n % i == 0:
            return False
    return True

def solution(numbers):
    answer = 0
    num_list = list(numbers)
    num_len = len(num_list)
    nPr = []
    
    # 가능한 모든 조합을 저장 
    # permutations 는 가능한 조합을 모두 만들어주는 역할
    for i in range(1, num_len + 1):
        nPr += list(itertools.permutations(num_list, i))

    # 소수일때 prime list 에 값 추가    
    prime = []
    for perm in nPr:
        num = int(''.join(perm))
        if is_prime(num) and num not in prime:
            prime.append(num)

    return len(prime)
